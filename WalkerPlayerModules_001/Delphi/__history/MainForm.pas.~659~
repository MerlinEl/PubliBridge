// https://docwiki.embarcadero.com/RADStudio/Sydney/en/Default_Keyboard_Shortcuts

unit MainForm;

interface

uses
    Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
    System.Classes, Vcl.Graphics, StrUtils, Math, IOUtils,
    Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls,
    Vcl.ButtonGroup, Generics.Collections, TypInfo, WalkerPlayer,
    WalkerPlayerOptions, MainFormSettings, WalkerPlayerUtils,
    Data.Bind.EngExt, Vcl.Bind.DBEngExt, Data.Bind.Components;

type
    TForm1 = class(TForm)
        GroupBox6: TGroupBox;
        TxtConsole: TMemo;
        grpOptions: TGroupBox;
        grpWalkerPlayer: TGroupBox;
        BtnPlayLesson: TButton;
        BtnPlay3D: TButton;
        BtnPlayVideo: TButton;
        BtnPlayAudio: TButton;
        BtnPlayImages: TButton;
        lbl1: TLabel;
        Cbx3DList: TComboBox;
        lbl5: TLabel;
        CbxVideoList: TComboBox;
        lbl6: TLabel;
        CbxAudioList: TComboBox;
        lbl7: TLabel;
        CbxImageList: TComboBox;
        lbl8: TLabel;
        ChkEscapeEnabled: TCheckBox;
        ChkAutoPlay: TCheckBox;
        ChkHiddenPlayer: TCheckBox;
        ChkHiddenConsole: TCheckBox;
        CbxLessonList: TComboBox;
        CbxBookDir: TComboBox;
        lbl9: TLabel;
        Button1: TButton;
        ChkResizable: TCheckBox;
    EdtUserName: TEdit;
    CbxWindowSize: TComboBox;
    Label4: TLabel;
    lbl2: TLabel;
        procedure BtnSayHelloClick(Sender: TObject);
        procedure OnFormShown(Sender: TObject);
        procedure BtnPlayLessonClick(Sender: TObject);
        procedure BtnPlayVideoClick(Sender: TObject);
        procedure BtnPlayAudioClick(Sender: TObject);
        procedure BtnPlayImagesClick(Sender: TObject);
        procedure BtnPlay3DClick(Sender: TObject);
        procedure OnUserDirectoryChanged(Sender: TObject);
        procedure OnBookDirectoryChanged(Sender: TObject);
    private
        { Private declarations }
    public
        { Public declarations }
    end;

var
    Form1: TForm1;

implementation

{$R *.DFM}

// ..............................//
// Utility Methods
// ..............................//
procedure Log(Str: String);
begin
    Form1.TxtConsole.Lines.Append(Str);
end;

// ..............................//
// Primary Events
// ..............................//
function GetBookDir(): string;
var
    userName, dropboxDir: string;
begin
    userName := Form1.EdtUserName.Text;
    dropboxDir := Form1.CbxBookDir.Text;
    Result := 'C:\Users\' + userName + '\' + dropboxDir;
end;

function GetFilesDirByType(swfDir: string): String;
var
    filesDir: string;
begin
    filesDir := GetBookDir() + '\' + swfDir;
    Log('MainForm > GetFilesDirByType > dir: ( ' + filesDir + ' )');
    Result := filesDir;
end;

function GetWPOptions(): OWPlayer;
var
    options: OWPlayer;
begin
    // Set-Up options
    options := OWPlayerDefault;
    options.BookDir := AnsiString(GetBookDir());
    options.HiddenPlayer := BoolToInt(Form1.ChkHiddenPlayer.Checked);
    options.HiddenConsole := BoolToInt(Form1.ChkHiddenConsole.Checked);
    options.AutoPlay := BoolToInt(Form1.ChkAutoPlay.Checked);
    options.EscapeEnabled := BoolToInt(Form1.ChkEscapeEnabled.Checked);
    options.Resizable := BoolToInt(Form1.ChkResizable.Checked);
    options.WindowSize := StrToAnsi(Form1.CbxWindowSize.Text);
    Result := options;
end;

procedure FillListsByType();
var
    dir: string;
begin
    dir := GetBookDir();
    if DirectoryExists(dir) then
    begin
        // Fill Lists by Type
        Log('MainForm > FillListsByType > BookDir: ( ' + dir + ' )');
        FillSWFList(Form1.Cbx3DList, GetFilesDirByType('3d'), 'swf');
        FillSWFList(Form1.CbxAudioList, GetFilesDirByType('audio'), 'mp3');
        FillSWFList(Form1.CbxLessonList, GetFilesDirByType('lessons'), 'swf');
        FillSWFList(Form1.CbxImageList, GetFilesDirByType('photos'), 'jpg');
        FillSWFList(Form1.CbxVideoList, GetFilesDirByType('video'), 'flv');
        Log(#9 + '3DList:> ( ' + Form1.Cbx3DList.Items.Count.ToString() + ' )');
        Log(#9 + 'AudioList:> ( ' + Form1.CbxAudioList.Items.Count.ToString
          () + ' )');
        Log(#9 + 'LessonList:> ( ' + Form1.CbxLessonList.Items.Count.ToString
          () + ' )');
        Log(#9 + 'PhotoList:> ( ' + Form1.CbxImageList.Items.Count.ToString
          () + ' )');
        Log(#9 + 'VideoList:> ( ' + Form1.CbxVideoList.Items.Count.ToString
          () + ' )');
    end
    else
    begin
        // Clear All Lists
        Form1.Cbx3DList.Clear();
        Form1.CbxAudioList.Clear();
        Form1.CbxLessonList.Clear();
        Form1.CbxImageList.Clear();
        Form1.CbxVideoList.Clear();
    end;
end;

procedure TForm1.OnUserDirectoryChanged(Sender: TObject);
begin
    FillListsByType();
end;

procedure TForm1.OnBookDirectoryChanged(Sender: TObject);
begin
    FillListsByType();
end;

procedure TForm1.BtnPlayAudioClick(Sender: TObject);
var
    options: OWPlayer;
begin
    options := GetWPOptions();
    options.Name := 'Audio Player:';
    options.MediaType := 'AUDIO';
    options.FileName := StrToAnsi(CbxAudioList.Text); // 04_01.swf
    // Button ID ( 04_01 ) < 04_01.swf
    // 04 > page     > number of current page
    // 01 > count    > sequence index
    options.ButtonID := ExtractFNameWithoutExt(options.FileName);
    options.WindowSize := '240,140';
    options.WindowPos := 'CENTER';
    // center on screen or set pos exam(100,200)
    WPlayer.Log('Delphi ( MainForm )', WPlayer.OptionsToString(options));
    WPlayer.LoadFile(options);
end;

procedure TForm1.BtnPlayImagesClick(Sender: TObject);
var
    options: OWPlayer;
    btnID: string;
begin
    options :=  GetWPOptions();
    options.Name := 'Image Player:';
    options.MediaType := 'IMAGES';
    options.FileName := CbxImageList.Text; // 20_01_01_meèoun obecný.jpg
    // IMAGE_ID ( 24_01_01 ) < 20_01_01_meèoun obecný.jpg
    // 24 > page     > number of current page
    // 01 > set      > images group
    // 01 > count    > sequence index
    btnID := ExtractFNameWithoutExt(options.FileName); // 20_01_01_meèoun obecný
    btnID := btnID.SubString(0, btnID.LastIndexOf('_')); // 24_01_01
    options.ButtonID := btnID.SubString(0, btnID.LastIndexOf('_')); // 24_01
    // center on screen or set pos exam(100,200)
    WPlayer.Log('Delphi ( MainForm )', WPlayer.OptionsToString(options));
    WPlayer.LoadFile(options);
end;

procedure TForm1.BtnPlayLessonClick(Sender: TObject);
var
    options: OWPlayer;
begin
    options := GetWPOptions();
    options.Name := 'Lesson Player:';
    options.MediaType := 'LESSONS';
    options.FileName := CbxLessonList.Text; // 04.swf
    // Button ID ( 04 ) < 04.swf
    options.ButtonID := ExtractFNameWithoutExt(options.FileName);
    WPlayer.Log('Delphi ( MainForm )', WPlayer.OptionsToString(options));
    WPlayer.LoadFile(options);
end;

procedure TForm1.BtnPlayVideoClick(Sender: TObject);
begin
    // TODO
end;
procedure TForm1.BtnPlay3DClick(Sender: TObject);
// var options: OWPlayer;
begin
    // options := GetWPOptions();
    // options.MediaType := 'STAGE3D';
    // options.ButtonID := GetFilesDirByType('3d') + '\' + Cbx3DList.Text;
    // TODO insert newlines and tabs for output
    // WPlayer.Log('Delphi ( MainForm )', options.ToString());
    // ShowMessage('Delphi ( MainForm )' + options.ToString());
    // ShowMessage('Delphi ( MainForm )' + WPlayer.OptionsToString(options));
    // WPlayer.Log('Delphi ( MainForm )', WPlayer.OptionsToString(options));
    // WPlayer.LoadFile(options);
end;

// ..............................//
// Initialize Form and Variables
// ..............................//
procedure TForm1.OnFormShown(Sender: TObject);
begin
    // ShowMessage('From was shown.');
    WalkerPlayer.CreateWPlayerInstance();
    EdtUserName.Text := GetUserName();
    FillListsByType();
end;

// ..............................//
// Test Events
// ..............................//
procedure TForm1.BtnSayHelloClick(Sender: TObject);
var
    msg, dir: string;
begin
    dir := GetBookDir();
    msg := '>' + #13#10 + '[ Mr.' + EdtUserName.Text + ' ]' + #13#10 +
      'Book path was se to >' + #13#10 + '[ ' + dir + ' ]';
    WPlayer.SayHello(msg);
end;

end.
